<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Review-Mapper">

	<sql id="search">
		<if test="searchType == 't'.toString()">
			and title like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'c'.toString()">
			and content like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'tc'.toString()">
			and (title like '%'||#{keyword}||'%'
			or content like '%'||#{keyword}||'%')
		</if>
	</sql>

	<select id="selectSearchReviewList" parameterType="pageMaker" resultType="review">
	 	select *
		from(
		    select rownum as rnum,SearchReviewResult.*
		    from ( 
		    	select * 
				from review
				where rno is not null
				<include refid="search" />				
				order by created desc
		    )  SearchReviewResult
		    <![CDATA[
		    where rownum <= #{endRow}		    
		)		 
		where rnum >= #{startRow}			
		 ]]>
	</select>

	<select id="selectSearchReviewListCount" parameterType="pageMaker" resultType="int">
		select count (*)
		from Review
		where rno is not null
		<include refid="search" />
	</select>
	
	<select id="selectReviewByRno" parameterType="int" resultType="review">
		select *
		from review
		where rno = #{rno}
	</select>
	
	<select id="selectReviewByAno" parameterType="int" resultType="review">
		select *
		from review
		where ano = #{ano}
	</select>
	
	<select id="selectAnoByRno" resultType="str">
		select ano
		from reivew
		where rno = #{rno}
	</select>
	
	<select id="selectMidByAno" parameterType="int" resultType="str">
		select mid
		from adoption
		where ano = #{ano}
	</select>
	
	<select id="selectAnoByMid" parameterType="str" resultType="int">
		select ano
		from adoption
		where mid = #{mid}
	</select>
	
	<select id="selectReviewSeqNext" resultType="int">
		select Review_seq.nextval
		from dual
	</select>
	
	<insert id="insertReview" parameterType="review">
		insert into
		review(rno, title, ano, content)
		values (#{rno}, #{title}, #{ano}, #{content})
	</insert>
	
	<update id="updateReview" parameterType="review">
		update review
		set title = #{title}, content = #{content}, review_update = sysdate
		where rno = #{rno}
	</update>

	<delete id="deleteReview" parameterType="int">
		delete
		from review
		where rno = #{rno}
	</delete>

	<update id="increaseViewCount" parameterType="int">
		update review
		set viewcount = viewcount+1
		where rno = #{rno}
	</update>
	
	<update id="increaseWritingCount" parameterType="int">
		update review
		set writing_count = writing_count+1
		where ano = #{ano}
	</update>
	
</mapper>